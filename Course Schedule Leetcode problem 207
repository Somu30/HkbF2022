class Solution {
public:
    bool canFinish(int numCourses, vector<vector<int>>& prereq) {
        int n=numCourses;
        vector<vector<int>> edge(n+1,vector<int>());
        for(int i=0;i<prereq.size();i++){
            edge[prereq[i][1]].push_back(prereq[i][0]);
        }
        vector<int> indeg(n,0);
        for(int i=0;i<n;i++){
            for(int j=0;j<edge[i].size();j++){
                indeg[edge[i][j]]++;
            }
        }
        queue<int> q; int cnt=0;
        for(int i=0;i<n;i++){if(indeg[i]==0){q.push(i);} cout<<indeg[i]<<" ";}
        while(!q.empty()){
            int top=q.front(); q.pop(); cnt++;
            for(int i=0;i<edge[top].size();i++){
                indeg[edge[top][i]]--;
                if(indeg[edge[top][i]]==0){
                    q.push(edge[top][i]);
                }
            }
        }
        return (cnt==n);
    }
};
